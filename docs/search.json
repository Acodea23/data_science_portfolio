[
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects Overview",
    "section": "",
    "text": "This section contains the projects I’ve completed during my data science journey. Each project shows different skills and what I’ve learned.\n\n\n\n\nLearning to understand data through charts and statistics.\n\n\n\nGetting data from websites, files, and other sources.\n\n\n\nPutting everything together in one comprehensive analysis.\n\n\n\n\n\n\n\nWhat I’ll Learn: How to explore data and find interesting patterns Tools: Python, Pandas, Matplotlib Description: Pick a dataset and explore it to discover insights and answer questions.\n\n\n\nWhat I’ll Learn: How to collect and clean real-world data Tools: Python, web scraping or APIs Description: Find an interesting data source, collect the data, and prepare it for analysis.\n\n\n\nWhat I’ll Learn: Complete data science workflow from start to finish Tools: Everything I’ve learned in the course Description: A comprehensive project that shows off all my data science skills.\n\nEach project includes clear templates to help guide my work and document what I learn.",
    "crumbs": [
      "Projects Overview"
    ]
  },
  {
    "objectID": "projects/index.html#project-categories",
    "href": "projects/index.html#project-categories",
    "title": "Projects Overview",
    "section": "",
    "text": "Learning to understand data through charts and statistics.\n\n\n\nGetting data from websites, files, and other sources.\n\n\n\nPutting everything together in one comprehensive analysis.",
    "crumbs": [
      "Projects Overview"
    ]
  },
  {
    "objectID": "projects/index.html#all-projects",
    "href": "projects/index.html#all-projects",
    "title": "Projects Overview",
    "section": "",
    "text": "What I’ll Learn: How to explore data and find interesting patterns Tools: Python, Pandas, Matplotlib Description: Pick a dataset and explore it to discover insights and answer questions.\n\n\n\nWhat I’ll Learn: How to collect and clean real-world data Tools: Python, web scraping or APIs Description: Find an interesting data source, collect the data, and prepare it for analysis.\n\n\n\nWhat I’ll Learn: Complete data science workflow from start to finish Tools: Everything I’ve learned in the course Description: A comprehensive project that shows off all my data science skills.\n\nEach project includes clear templates to help guide my work and document what I learn.",
    "crumbs": [
      "Projects Overview"
    ]
  },
  {
    "objectID": "projects/example-analysis.html",
    "href": "projects/example-analysis.html",
    "title": "Example: Data Visualization with Python",
    "section": "",
    "text": "This is an example project showing how to create visualizations and include mathematical equations in your Quarto documents. Students can use this as a template for their own analyses.\n\n\nThis example demonstrates: - Creating plots with Python and matplotlib - Including mathematical equations with LaTeX - Properly documenting code and findings - Using code folding for clean presentation\n\n\n\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis\n\n\n\n\n\n\n\n\nYou can include mathematical equations using LaTeX syntax. This is useful for documenting statistical methods or mathematical models.\n\n\nThe chi-squared statistic is calculated as:\n\\[\n\\chi^2 = \\sum_{i=1}^n \\frac{(O_i - E_i)^2}{E_i}\n\\]\nWhere: - \\(O_i\\) = observed frequency - \\(E_i\\) = expected frequency - \\(n\\) = number of categories\n\n\n\nYou can also include inline math like \\(\\mu = \\frac{1}{n}\\sum_{i=1}^n x_i\\) for the sample mean.\n\n\n\n\n\n\nCode\n# Generate sample data\nnp.random.seed(42)\ndata = np.random.normal(100, 15, 1000)\n\n# Create histogram\nplt.figure(figsize=(10, 6))\nplt.hist(data, bins=30, alpha=0.7, color='skyblue', edgecolor='black')\nplt.title('Distribution of Sample Data')\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.grid(axis='y', alpha=0.3)\nplt.show()\n\n# Print basic statistics\nprint(f\"Mean: {np.mean(data):.2f}\")\nprint(f\"Standard Deviation: {np.std(data):.2f}\")\nprint(f\"Sample Size: {len(data)}\")\n\n\n\n\n\n\n\n\nFigure 2: Example histogram of random data\n\n\n\n\n\nMean: 100.29\nStandard Deviation: 14.68\nSample Size: 1000\n\n\n\n\n\nThis example analysis demonstrates:\n\nVisualization Techniques: Both polar and rectangular coordinate plots\nStatistical Documentation: Proper use of mathematical notation\nCode Organization: Clean, well-documented code with appropriate comments\nProfessional Presentation: Using figure captions and proper formatting\n\n\n\n\nThis template shows students how to: - Structure a data science project - Include executable code with clear outputs - Document findings professionally - Use mathematical notation when appropriate\nStudents should replace this content with their own analysis while maintaining the same professional structure and documentation standards.\n\nThis is a template file. Replace with your own analysis and findings."
  },
  {
    "objectID": "projects/example-analysis.html#introduction",
    "href": "projects/example-analysis.html#introduction",
    "title": "Example: Data Visualization with Python",
    "section": "",
    "text": "This example demonstrates: - Creating plots with Python and matplotlib - Including mathematical equations with LaTeX - Properly documenting code and findings - Using code folding for clean presentation"
  },
  {
    "objectID": "projects/example-analysis.html#data-visualization-example",
    "href": "projects/example-analysis.html#data-visualization-example",
    "title": "Example: Data Visualization with Python",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "projects/example-analysis.html#mathematical-equations",
    "href": "projects/example-analysis.html#mathematical-equations",
    "title": "Example: Data Visualization with Python",
    "section": "",
    "text": "You can include mathematical equations using LaTeX syntax. This is useful for documenting statistical methods or mathematical models.\n\n\nThe chi-squared statistic is calculated as:\n\\[\n\\chi^2 = \\sum_{i=1}^n \\frac{(O_i - E_i)^2}{E_i}\n\\]\nWhere: - \\(O_i\\) = observed frequency - \\(E_i\\) = expected frequency - \\(n\\) = number of categories\n\n\n\nYou can also include inline math like \\(\\mu = \\frac{1}{n}\\sum_{i=1}^n x_i\\) for the sample mean."
  },
  {
    "objectID": "projects/example-analysis.html#additional-visualization",
    "href": "projects/example-analysis.html#additional-visualization",
    "title": "Example: Data Visualization with Python",
    "section": "",
    "text": "Code\n# Generate sample data\nnp.random.seed(42)\ndata = np.random.normal(100, 15, 1000)\n\n# Create histogram\nplt.figure(figsize=(10, 6))\nplt.hist(data, bins=30, alpha=0.7, color='skyblue', edgecolor='black')\nplt.title('Distribution of Sample Data')\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.grid(axis='y', alpha=0.3)\nplt.show()\n\n# Print basic statistics\nprint(f\"Mean: {np.mean(data):.2f}\")\nprint(f\"Standard Deviation: {np.std(data):.2f}\")\nprint(f\"Sample Size: {len(data)}\")\n\n\n\n\n\n\n\n\nFigure 2: Example histogram of random data\n\n\n\n\n\nMean: 100.29\nStandard Deviation: 14.68\nSample Size: 1000"
  },
  {
    "objectID": "projects/example-analysis.html#key-findings",
    "href": "projects/example-analysis.html#key-findings",
    "title": "Example: Data Visualization with Python",
    "section": "",
    "text": "This example analysis demonstrates:\n\nVisualization Techniques: Both polar and rectangular coordinate plots\nStatistical Documentation: Proper use of mathematical notation\nCode Organization: Clean, well-documented code with appropriate comments\nProfessional Presentation: Using figure captions and proper formatting"
  },
  {
    "objectID": "projects/example-analysis.html#conclusion",
    "href": "projects/example-analysis.html#conclusion",
    "title": "Example: Data Visualization with Python",
    "section": "",
    "text": "This template shows students how to: - Structure a data science project - Include executable code with clear outputs - Document findings professionally - Use mathematical notation when appropriate\nStudents should replace this content with their own analysis while maintaining the same professional structure and documentation standards.\n\nThis is a template file. Replace with your own analysis and findings."
  },
  {
    "objectID": "projects/data-acquisition.html",
    "href": "projects/data-acquisition.html",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "Goal: Collect and clean data for analysis\nWhat I’ll Learn: How to gather data from different sources and prepare it for analysis\nTools: Python, Pandas, web scraping or APIs\n\n\n\n\n\n\nWhat: [Describe your data - what is it about?]\nWhere: [Where did you get it? Website, API, file download?]\nWhy: [Why is this data interesting or useful?]\n\n\n\n\n\nChoose ONE of these methods:\n\n\nimport pandas as pd\n\n# Load your data file\ndata = pd.read_csv('your_file.csv')  # or .xlsx, .json, etc.\nprint(\"Data loaded!\")\nprint(f\"Shape: {data.shape}\")\nprint(data.head())\n\n\n\nimport requests\nimport pandas as pd\n\n# Example API call\nurl = \"https://api.example.com/data\"\nresponse = requests.get(url)\ndata = response.json()\n\n# Convert to DataFrame\ndf = pd.DataFrame(data)\n\n\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport pandas as pd\n\n# Get the webpage\nurl = \"https://example.com\"\nresponse = requests.get(url)\nsoup = BeautifulSoup(response.content, 'html.parser')\n\n# Extract data (you'll customize this part)\n# data = []\n# for item in soup.find_all('div', class_='data-item'):\n#     data.append(item.text)\n\n\n\n\n\n\n# Basic info about the data\nprint(\"Dataset shape:\", data.shape)\nprint(\"\\nColumn names:\", data.columns.tolist())\nprint(\"\\nMissing values:\")\nprint(data.isnull().sum())\n\n\n\n\nMissing Values: [How did you handle empty cells?]\nData Types: [Did you need to convert any columns?]\nDuplicates: [Were there any duplicate rows?]\n\n# Example cleaning steps\n# Remove duplicates\ndata = data.drop_duplicates()\n\n# Fill missing values\ndata['column_name'].fillna('Unknown', inplace=True)\n\n# Convert data types\ndata['date_column'] = pd.to_datetime(data['date_column'])\n\n\n\n\nWhat I ended up with: - Rows: [number] records - Columns: [number] variables - Key Variables: [list the most important columns]\n# Summary of final data\nprint(\"Final dataset summary:\")\nprint(data.describe())\n\n\n\n\n\nProblem: [Describe the issue] Solution: [How I fixed it]\n\n\n\nProblem: [Describe the issue] Solution: [How I fixed it]\n\n\n\n\n\n[Key skill or insight #1]\n[Key skill or insight #2]\n[Key skill or insight #3]\n\n\n\n\nWith this clean dataset, I could: - [What analysis could you do?] - [What questions could you answer?] - [What visualizations would be interesting?]\n\nThis project taught me how to collect and clean real-world data for analysis.",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/data-acquisition.html#overview",
    "href": "projects/data-acquisition.html#overview",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "Goal: Collect and clean data for analysis\nWhat I’ll Learn: How to gather data from different sources and prepare it for analysis\nTools: Python, Pandas, web scraping or APIs",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/data-acquisition.html#my-data-sources",
    "href": "projects/data-acquisition.html#my-data-sources",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "What: [Describe your data - what is it about?]\nWhere: [Where did you get it? Website, API, file download?]\nWhy: [Why is this data interesting or useful?]",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/data-acquisition.html#how-i-collected-the-data",
    "href": "projects/data-acquisition.html#how-i-collected-the-data",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "Choose ONE of these methods:\n\n\nimport pandas as pd\n\n# Load your data file\ndata = pd.read_csv('your_file.csv')  # or .xlsx, .json, etc.\nprint(\"Data loaded!\")\nprint(f\"Shape: {data.shape}\")\nprint(data.head())\n\n\n\nimport requests\nimport pandas as pd\n\n# Example API call\nurl = \"https://api.example.com/data\"\nresponse = requests.get(url)\ndata = response.json()\n\n# Convert to DataFrame\ndf = pd.DataFrame(data)\n\n\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport pandas as pd\n\n# Get the webpage\nurl = \"https://example.com\"\nresponse = requests.get(url)\nsoup = BeautifulSoup(response.content, 'html.parser')\n\n# Extract data (you'll customize this part)\n# data = []\n# for item in soup.find_all('div', class_='data-item'):\n#     data.append(item.text)",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/data-acquisition.html#cleaning-my-data",
    "href": "projects/data-acquisition.html#cleaning-my-data",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "# Basic info about the data\nprint(\"Dataset shape:\", data.shape)\nprint(\"\\nColumn names:\", data.columns.tolist())\nprint(\"\\nMissing values:\")\nprint(data.isnull().sum())\n\n\n\n\nMissing Values: [How did you handle empty cells?]\nData Types: [Did you need to convert any columns?]\nDuplicates: [Were there any duplicate rows?]\n\n# Example cleaning steps\n# Remove duplicates\ndata = data.drop_duplicates()\n\n# Fill missing values\ndata['column_name'].fillna('Unknown', inplace=True)\n\n# Convert data types\ndata['date_column'] = pd.to_datetime(data['date_column'])",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/data-acquisition.html#final-dataset",
    "href": "projects/data-acquisition.html#final-dataset",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "What I ended up with: - Rows: [number] records - Columns: [number] variables - Key Variables: [list the most important columns]\n# Summary of final data\nprint(\"Final dataset summary:\")\nprint(data.describe())",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/data-acquisition.html#challenges-i-faced",
    "href": "projects/data-acquisition.html#challenges-i-faced",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "Problem: [Describe the issue] Solution: [How I fixed it]\n\n\n\nProblem: [Describe the issue] Solution: [How I fixed it]",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/data-acquisition.html#what-i-learned",
    "href": "projects/data-acquisition.html#what-i-learned",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "[Key skill or insight #1]\n[Key skill or insight #2]\n[Key skill or insight #3]",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/data-acquisition.html#next-steps",
    "href": "projects/data-acquisition.html#next-steps",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "With this clean dataset, I could: - [What analysis could you do?] - [What questions could you answer?] - [What visualizations would be interesting?]\n\nThis project taught me how to collect and clean real-world data for analysis.",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Welcome to my data science portfolio! This site shows my journey learning data science and analytics. Here you’ll find projects that demonstrate what I’ve learned and discovered.\n\n\n\n\nSee how I explore datasets, create visualizations, and find interesting patterns in data.\n\n\n\nFollow along as I learn new skills in Python, data analysis, and data science tools.\n\n\n\nCheck out the insights and findings from my data explorations.\n\n\n\n\n\nProgramming: Python, Pandas for data analysis\nVisualization: Creating charts with Matplotlib and Seaborn\nData Collection: Getting data from files, websites, and APIs\nAnalysis: Finding patterns and answering questions with data\n\n\n\n\n\n\n\nLearn how I explore datasets to find interesting patterns and answer questions.\n\n\n\nSee how I gather data from different sources and prepare it for analysis.\n\n\n\n\n\nThis portfolio shows my work learning data science. Each project includes:\n\nMy code and how it works\nVisualizations I created\nWhat I learned and discovered\nChallenges I faced and how I solved them\n\nI built this site using Quarto and host it on GitHub Pages.\n\nThanks for visiting! Feel free to explore my projects and see what I’m learning."
  },
  {
    "objectID": "index.html#what-youll-find-here",
    "href": "index.html#what-youll-find-here",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "See how I explore datasets, create visualizations, and find interesting patterns in data.\n\n\n\nFollow along as I learn new skills in Python, data analysis, and data science tools.\n\n\n\nCheck out the insights and findings from my data explorations."
  },
  {
    "objectID": "index.html#skills-im-learning",
    "href": "index.html#skills-im-learning",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Programming: Python, Pandas for data analysis\nVisualization: Creating charts with Matplotlib and Seaborn\nData Collection: Getting data from files, websites, and APIs\nAnalysis: Finding patterns and answering questions with data"
  },
  {
    "objectID": "index.html#my-projects",
    "href": "index.html#my-projects",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Learn how I explore datasets to find interesting patterns and answer questions.\n\n\n\nSee how I gather data from different sources and prepare it for analysis."
  },
  {
    "objectID": "index.html#about-this-portfolio",
    "href": "index.html#about-this-portfolio",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "This portfolio shows my work learning data science. Each project includes:\n\nMy code and how it works\nVisualizations I created\nWhat I learned and discovered\nChallenges I faced and how I solved them\n\nI built this site using Quarto and host it on GitHub Pages.\n\nThanks for visiting! Feel free to explore my projects and see what I’m learning."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Write a brief introduction about yourself here. Include:\n\nYour academic background\nYour interest in data science\nYour career goals\nAny relevant experience or projects\n\n\n\n\n\n[Your Degree] - [University Name], [Year]\nRelevant Coursework: Statistics, Data Analysis, Programming, etc.\n\n\n\n\n\n\n\nProgramming: Python, R, SQL\nData Analysis: Pandas, NumPy, Tidyverse\nVisualization: Matplotlib, Seaborn, ggplot2\nMachine Learning: Scikit-learn, basics of deep learning\nTools: Jupyter Notebooks, RStudio, Git/GitHub\n\n\n\n\n\n[Your specific interests, e.g., environmental data, healthcare analytics, finance, etc.]\n[Other areas you’re curious about]\n\n\n\n\n\nDescribe what you hope to achieve through your data science journey:\n\nShort-term learning objectives\nLong-term career aspirations\nTypes of problems you want to solve\n\n\n\n\n\nEmail: your.email@example.com\nGitHub: github.com/your-username\nLinkedIn: linkedin.com/in/your-profile\n\n\nThis portfolio showcases my learning progress and projects completed during my data science studies."
  },
  {
    "objectID": "about.html#background",
    "href": "about.html#background",
    "title": "About Me",
    "section": "",
    "text": "Write a brief introduction about yourself here. Include:\n\nYour academic background\nYour interest in data science\nYour career goals\nAny relevant experience or projects"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "",
    "text": "[Your Degree] - [University Name], [Year]\nRelevant Coursework: Statistics, Data Analysis, Programming, etc."
  },
  {
    "objectID": "about.html#skills-interests",
    "href": "about.html#skills-interests",
    "title": "About Me",
    "section": "",
    "text": "Programming: Python, R, SQL\nData Analysis: Pandas, NumPy, Tidyverse\nVisualization: Matplotlib, Seaborn, ggplot2\nMachine Learning: Scikit-learn, basics of deep learning\nTools: Jupyter Notebooks, RStudio, Git/GitHub\n\n\n\n\n\n[Your specific interests, e.g., environmental data, healthcare analytics, finance, etc.]\n[Other areas you’re curious about]"
  },
  {
    "objectID": "about.html#goals",
    "href": "about.html#goals",
    "title": "About Me",
    "section": "",
    "text": "Describe what you hope to achieve through your data science journey:\n\nShort-term learning objectives\nLong-term career aspirations\nTypes of problems you want to solve"
  },
  {
    "objectID": "about.html#contact",
    "href": "about.html#contact",
    "title": "About Me",
    "section": "",
    "text": "Email: your.email@example.com\nGitHub: github.com/your-username\nLinkedIn: linkedin.com/in/your-profile\n\n\nThis portfolio showcases my learning progress and projects completed during my data science studies."
  },
  {
    "objectID": "INSTRUCTOR_SETUP.html",
    "href": "INSTRUCTOR_SETUP.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "INSTRUCTOR_SETUP.html#quick-setup-for-instructors",
    "href": "INSTRUCTOR_SETUP.html#quick-setup-for-instructors",
    "title": "",
    "section": "Quick Setup for Instructors",
    "text": "Quick Setup for Instructors\n\n1. Template Customization\nBefore sharing with students, customize these files:\n\n_quarto.yml\n\nUpdate the default title: Change “Your Name - Data Science Portfolio” to match your course\nModify navigation structure based on your course projects\nAdjust the theme if desired (options: cosmo, flatly, darkly, etc.)\n\n\n\nREADME.md\n\nUpdate course-specific information\nModify project categories to match your curriculum\nAdd your institution’s specific requirements\n\n\n\n\n2. Creating Course-Specific Versions\n\nOption A: GitHub Template Repository\n\nCreate a new repository from this template\nCustomize for your course\nStudents can use “Use this template” button\n\n\n\nOption B: Fork and Customize\n\nFork this repository\nMake course-specific changes\nShare the fork link with students\n\n\n\n\n3. Student Instructions Template\nCopy and customize this text for your course:\n## Course-Specific Setup\n\n1. Use this template repository to create your portfolio\n2. Replace \"Your Name\" with your actual name in all files\n3. Update the GitHub and LinkedIn links in `_quarto.yml`\n4. Follow the project structure for Assignment X, Y, Z...\n\n## Required Projects for [Course Name]\n\n- [ ] Assignment 1: Exploratory Data Analysis\n- [ ] Assignment 2: Data Acquisition Project  \n- [ ] Assignment 3: Statistical Analysis\n- [ ] Final Project: [Specific requirements]\n\n## Submission Guidelines\n\n- Deploy your site to GitHub Pages\n- Submit the repository URL and live site URL\n- Ensure all code runs without errors\n- Include proper documentation and citations\n\n\n4. Grading Rubric Suggestions\n\nTechnical Implementation (40%)\n\nSite builds and deploys successfully\nCode runs without errors\nProper use of Quarto features (code folding, citations, etc.)\nProfessional site navigation and structure\n\n\n\nContent Quality (40%)\n\nClear project descriptions and methodology\nAppropriate data visualization and analysis\nWell-documented code with comments\nProfessional writing and presentation\n\n\n\nPortfolio Presentation (20%)\n\nConsistent formatting and style\nEffective use of visual elements\nProfessional About page and contact information\nDemonstrates learning progression\n\n\n\n\n5. Common Student Issues and Solutions\n\nIssue: “Quarto won’t render”\nSolution: Check for: - Python/R installation issues - Missing packages (create requirements.txt) - YAML syntax errors in frontmatter\n\n\nIssue: “GitHub Pages not updating”\nSolution: - Ensure GitHub Pages is enabled - Check that output-dir is set to “docs” - Verify the main branch has the docs folder\n\n\nIssue: “Code doesn’t run”\nSolution: - Provide a template environment.yml or requirements.txt - Include setup instructions for common packages - Consider using Binder or Google Colab links\n\n\n\n6. Customization Options\n\nFor Programming-Heavy Courses\nAdd to _quarto.yml:\nformat:\n  html:\n    code-link: true\n    code-copy: true\n    code-overflow: wrap\n\n\nFor Research-Focused Courses\nAdd bibliography support:\nbibliography: references.bib\ncsl: apa.csl\n\n\nFor Collaborative Projects\nConsider adding: - Team member attribution sections - Shared data folders - Collaboration guidelines\n\n\n\n7. Assessment Integration\n\nPortfolio Checkpoints\nSuggested timeline: - Week 3: Site setup and About page - Week 6: First project completed - Week 10: Mid-semester portfolio review - Week 15: Final portfolio submission\n\n\nPeer Review Activities\n\nPortfolio gallery walks\nPeer feedback sessions\nCross-project citations and references\n\n\n\n\n8. Advanced Features\n\nAnalytics (Optional)\nAdd Google Analytics to _quarto.yml:\nwebsite:\n  google-analytics: \"G-XXXXXXXXXX\"\n\n\nComments (Optional)\nEnable utterances for commenting:\ncomments:\n  utterances:\n    repo: username/repo-name\n\n\n\n9. Maintenance Tips\n\nKeep Template Updated\n\nRegularly update package versions\nMonitor Quarto updates for new features\nCollect student feedback for improvements\n\n\n\nBackup Strategy\n\nEncourage students to commit regularly\nProvide Git best practices guide\nConsider automated backup solutions\n\n\n\n\n10. Troubleshooting Resources\nCreate a course FAQ with: - Common error messages and solutions - Links to Quarto documentation - Office hours schedule for technical help - Student collaboration guidelines"
  },
  {
    "objectID": "INSTRUCTOR_SETUP.html#additional-resources-for-instructors",
    "href": "INSTRUCTOR_SETUP.html#additional-resources-for-instructors",
    "title": "",
    "section": "Additional Resources for Instructors",
    "text": "Additional Resources for Instructors\n\nQuarto for Academics\nGitHub Classroom Integration\nTeaching with GitHub Pages"
  },
  {
    "objectID": "INSTRUCTOR_SETUP.html#support",
    "href": "INSTRUCTOR_SETUP.html#support",
    "title": "",
    "section": "Support",
    "text": "Support\nFor technical issues with this template: - Check the Quarto documentation - Review GitHub Issues in this repository - Contact [your support information]\n\nThis template is designed to be flexible and adaptable to various data science course structures."
  },
  {
    "objectID": "projects/eda.html",
    "href": "projects/eda.html",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "FIXME",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/final-project.html",
    "href": "projects/final-project.html",
    "title": "",
    "section": "",
    "text": "Code",
    "crumbs": [
      "Final Project"
    ]
  }
]