---
title: "Example: Data Visualization with Python"
author: "Template Author"
date: "2024-01-01"
format:
  html:
    code-fold: true
    toc: true
jupyter: python3
---

# Example Analysis: Data Visualization

This is an example project showing how to create visualizations and include mathematical equations in your Quarto documents. Students can use this as a template for their own analyses.

## Introduction

This example demonstrates:
- Creating plots with Python and matplotlib
- Including mathematical equations with LaTeX
- Properly documenting code and findings
- Using code folding for clean presentation

## Data Visualization Example

For a demonstration of a line plot on a polar axis, see @fig-polar.

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

## Mathematical Equations

You can include mathematical equations using LaTeX syntax. This is useful for documenting statistical methods or mathematical models.

### Example Equation

The chi-squared statistic is calculated as:

$$
\chi^2 = \sum_{i=1}^n \frac{(O_i - E_i)^2}{E_i}
$$

Where:
- $O_i$ = observed frequency
- $E_i$ = expected frequency
- $n$ = number of categories

### Inline Math

You can also include inline math like $\mu = \frac{1}{n}\sum_{i=1}^n x_i$ for the sample mean.

## Additional Visualization

```{python}
#| label: fig-histogram
#| fig-cap: "Example histogram of random data"

# Generate sample data
np.random.seed(42)
data = np.random.normal(100, 15, 1000)

# Create histogram
plt.figure(figsize=(10, 6))
plt.hist(data, bins=30, alpha=0.7, color='skyblue', edgecolor='black')
plt.title('Distribution of Sample Data')
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.grid(axis='y', alpha=0.3)
plt.show()

# Print basic statistics
print(f"Mean: {np.mean(data):.2f}")
print(f"Standard Deviation: {np.std(data):.2f}")
print(f"Sample Size: {len(data)}")
```

## Key Findings

This example analysis demonstrates:

1. **Visualization Techniques**: Both polar and rectangular coordinate plots
2. **Statistical Documentation**: Proper use of mathematical notation
3. **Code Organization**: Clean, well-documented code with appropriate comments
4. **Professional Presentation**: Using figure captions and proper formatting

## Conclusion

This template shows students how to:
- Structure a data science project
- Include executable code with clear outputs
- Document findings professionally
- Use mathematical notation when appropriate

Students should replace this content with their own analysis while maintaining the same professional structure and documentation standards.

---

*This is a template file. Replace with your own analysis and findings.*
