{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Example: Data Visualization with Python\"\n",
        "author: \"Template Author\"\n",
        "date: \"2024-01-01\"\n",
        "format:\n",
        "  html:\n",
        "    code-fold: true\n",
        "    toc: true\n",
        "jupyter: python3\n",
        "---\n",
        "\n",
        "# Example Analysis: Data Visualization\n",
        "\n",
        "This is an example project showing how to create visualizations and include mathematical equations in your Quarto documents. Students can use this as a template for their own analyses.\n",
        "\n",
        "## Introduction\n",
        "\n",
        "This example demonstrates:\n",
        "- Creating plots with Python and matplotlib\n",
        "- Including mathematical equations with LaTeX\n",
        "- Properly documenting code and findings\n",
        "- Using code folding for clean presentation\n",
        "\n",
        "## Data Visualization Example\n",
        "\n",
        "For a demonstration of a line plot on a polar axis, see @fig-polar."
      ],
      "id": "7e716073"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-polar\n",
        "#| fig-cap: A line plot on a polar axis\n",
        "\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "r = np.arange(0, 2, 0.01)\n",
        "theta = 2 * np.pi * r\n",
        "fig, ax = plt.subplots(\n",
        "  subplot_kw = {'projection': 'polar'} \n",
        ")\n",
        "ax.plot(theta, r)\n",
        "ax.set_rticks([0.5, 1, 1.5, 2])\n",
        "ax.grid(True)\n",
        "plt.show()"
      ],
      "id": "fig-polar",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Mathematical Equations\n",
        "\n",
        "You can include mathematical equations using LaTeX syntax. This is useful for documenting statistical methods or mathematical models.\n",
        "\n",
        "### Example Equation\n",
        "\n",
        "The chi-squared statistic is calculated as:\n",
        "\n",
        "$$\n",
        "\\chi^2 = \\sum_{i=1}^n \\frac{(O_i - E_i)^2}{E_i}\n",
        "$$\n",
        "\n",
        "Where:\n",
        "- $O_i$ = observed frequency\n",
        "- $E_i$ = expected frequency\n",
        "- $n$ = number of categories\n",
        "\n",
        "### Inline Math\n",
        "\n",
        "You can also include inline math like $\\mu = \\frac{1}{n}\\sum_{i=1}^n x_i$ for the sample mean.\n",
        "\n",
        "## Additional Visualization"
      ],
      "id": "e8ad0b67"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-histogram\n",
        "#| fig-cap: Example histogram of random data\n",
        "\n",
        "# Generate sample data\n",
        "np.random.seed(42)\n",
        "data = np.random.normal(100, 15, 1000)\n",
        "\n",
        "# Create histogram\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.hist(data, bins=30, alpha=0.7, color='skyblue', edgecolor='black')\n",
        "plt.title('Distribution of Sample Data')\n",
        "plt.xlabel('Value')\n",
        "plt.ylabel('Frequency')\n",
        "plt.grid(axis='y', alpha=0.3)\n",
        "plt.show()\n",
        "\n",
        "# Print basic statistics\n",
        "print(f\"Mean: {np.mean(data):.2f}\")\n",
        "print(f\"Standard Deviation: {np.std(data):.2f}\")\n",
        "print(f\"Sample Size: {len(data)}\")"
      ],
      "id": "fig-histogram",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Key Findings\n",
        "\n",
        "This example analysis demonstrates:\n",
        "\n",
        "1. **Visualization Techniques**: Both polar and rectangular coordinate plots\n",
        "2. **Statistical Documentation**: Proper use of mathematical notation\n",
        "3. **Code Organization**: Clean, well-documented code with appropriate comments\n",
        "4. **Professional Presentation**: Using figure captions and proper formatting\n",
        "\n",
        "## Conclusion\n",
        "\n",
        "This template shows students how to:\n",
        "- Structure a data science project\n",
        "- Include executable code with clear outputs\n",
        "- Document findings professionally\n",
        "- Use mathematical notation when appropriate\n",
        "\n",
        "Students should replace this content with their own analysis while maintaining the same professional structure and documentation standards.\n",
        "\n",
        "---\n",
        "\n",
        "*This is a template file. Replace with your own analysis and findings.*"
      ],
      "id": "63e8e886"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\tkerby2\\Desktop\\Teaching\\Explore_github_pages\\.venv\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}